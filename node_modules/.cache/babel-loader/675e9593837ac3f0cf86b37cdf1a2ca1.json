{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACTJS\\\\React Workspace\\\\view-bene-app\\\\src\\\\components\\\\Sidebar.js\";\nimport React from 'react';\nimport styled from \"styled-components\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n/* This defines the actual bar going down the screen */\n\nconst StyledSideNav = styled.div`\n  position: fixed;     /* Fixed Sidebar (stay in place on scroll and position relative to viewport) */\n  height: 100%;\n  width: 75px;     /* Set the width of the sidebar */\n  z-index: 1;      /* Stay on top of everything */\n  top: 3.4em;      /* Stay at the top */\n  background-color: #222; /* Black */\n  overflow-x: hidden;     /* Disable horizontal scroll */\n  padding-top: 50px;\n`;\n\nclass SideNav extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onItemClick = path => {\n      this.setState({\n        activePath: path\n      });\n      /* Sets activePath which causes rerender which causes CSS to change */\n    };\n\n    this.state = {\n      activePath: '/',\n      items: [{\n        path: '/mostfreq',\n\n        /* path is used as id to check which NavItem is active basically */\n        name: 'MostFreq',\n        css: 'fa fa-clock-o',\n        key: 1\n        /* Key is required, else console throws error. Does this please you Mr. Browser?! */\n\n      }, {\n        path: '/lessfreq',\n        name: 'LessFreq',\n        css: 'fa fa-star',\n        key: 2\n      }]\n    };\n  }\n\n  render() {\n    const {\n      items,\n      activePath\n    } = this.state;\n    return /*#__PURE__*/React.createElement(StyledSideNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    },\n    /* items = just array AND map() loops thru that array AND item is param of that loop */\n    items.map(item => {\n      /* Return however many NavItems in array to be rendered */\n      return /*#__PURE__*/React.createElement(NavItem, {\n        path: item.path,\n        name: item.name,\n        css: item.css,\n        onItemClick: this.onItemClick\n        /* Simply passed an entire function to onClick prop */\n        ,\n        active: item.path === activePath,\n        key: item.key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      });\n    }));\n  }\n\n}\n\nconst StyledNavItem = styled.div`\n  height: 70px;\n  width: 75px; /* width must be same size as NavBar to center */\n  text-align: center; /* Aligns <a> inside of NavIcon div */\n  margin-bottom: 0;   /* Puts space between NavItems */\n  a {\n    font-size: 2.7em;\n    color: ${props => props.active ? \"white\" : \"#9FFFCB\"};\n    :hover {\n      opacity: 0.7;\n      text-decoration: none; /* Gets rid of underlining of icons */\n    }  \n  }\n`;\n\nclass NavItem extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = () => {\n      const {\n        path,\n        onItemClick\n      } = this.props;\n      onItemClick(path);\n    };\n  }\n\n  render() {\n    const {\n      active\n    } = this.props;\n    return /*#__PURE__*/React.createElement(StyledNavItem, {\n      active: active,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: this.props.path,\n      className: this.props.css,\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nconst NavIcon = styled.div`\n`;\nexport default class Sidebar extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(SideNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["D:/REACTJS/React Workspace/view-bene-app/src/components/Sidebar.js"],"names":["React","styled","BrowserRouter","Router","Route","Link","StyledSideNav","div","SideNav","Component","constructor","props","onItemClick","path","setState","activePath","state","items","name","css","key","render","map","item","StyledNavItem","active","NavItem","handleClick","NavIcon","Sidebar"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\n/* This defines the actual bar going down the screen */\r\nconst StyledSideNav = styled.div`\r\n  position: fixed;     /* Fixed Sidebar (stay in place on scroll and position relative to viewport) */\r\n  height: 100%;\r\n  width: 75px;     /* Set the width of the sidebar */\r\n  z-index: 1;      /* Stay on top of everything */\r\n  top: 3.4em;      /* Stay at the top */\r\n  background-color: #222; /* Black */\r\n  overflow-x: hidden;     /* Disable horizontal scroll */\r\n  padding-top: 50px;\r\n`;\r\n\r\nclass SideNav extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          activePath: '/',\r\n          items: [\r\n            {\r\n              path: '/mostfreq', /* path is used as id to check which NavItem is active basically */\r\n              name: 'MostFreq',\r\n              css: 'fa fa-clock-o',\r\n              key: 1 /* Key is required, else console throws error. Does this please you Mr. Browser?! */\r\n            },\r\n            {\r\n              path: '/lessfreq',\r\n              name: 'LessFreq',\r\n              css: 'fa fa-star',\r\n              key: 2\r\n            },\r\n          ]\r\n        }  \r\n      }\r\n    \r\n    onItemClick = (path) => {\r\n        this.setState({ activePath: path }); /* Sets activePath which causes rerender which causes CSS to change */\r\n    }  \r\n\r\n    render() {\r\n        const { items, activePath } = this.state;\r\n        return (\r\n          <StyledSideNav>{\r\n                /* items = just array AND map() loops thru that array AND item is param of that loop */\r\n                items.map((item) => {\r\n                /* Return however many NavItems in array to be rendered */\r\n                return (\r\n                    <NavItem path={item.path} name={item.name} css={item.css} onItemClick={this.onItemClick} \r\n                    /* Simply passed an entire function to onClick prop */ \r\n                    active={item.path === activePath} key={item.key}/>\r\n                )\r\n        })\r\n      }\r\n          </StyledSideNav>\r\n        );\r\n      }\r\n}\r\n\r\n\r\nconst StyledNavItem = styled.div`\r\n  height: 70px;\r\n  width: 75px; /* width must be same size as NavBar to center */\r\n  text-align: center; /* Aligns <a> inside of NavIcon div */\r\n  margin-bottom: 0;   /* Puts space between NavItems */\r\n  a {\r\n    font-size: 2.7em;\r\n    color: ${(props) => props.active ? \"white\" : \"#9FFFCB\"};\r\n    :hover {\r\n      opacity: 0.7;\r\n      text-decoration: none; /* Gets rid of underlining of icons */\r\n    }  \r\n  }\r\n`;\r\n\r\n\r\nclass NavItem extends React.Component {\r\n    handleClick = () => {\r\n        const { path, onItemClick } = this.props;\r\n        onItemClick(path);\r\n    }\r\n\r\n    render() {\r\n        const { active } = this.props;\r\n        return (\r\n            <StyledNavItem active={active}>\r\n                <Link to={this.props.path} className={this.props.css} onClick={this.handleClick}>\r\n                    <NavIcon></NavIcon>\r\n                </Link>\r\n            </StyledNavItem>\r\n      );\r\n    }\r\n}\r\n\r\nconst NavIcon = styled.div`\r\n`;\r\n\r\nexport default class Sidebar extends React.Component {\r\n  render() {\r\n    return (\r\n      <SideNav></SideNav>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}